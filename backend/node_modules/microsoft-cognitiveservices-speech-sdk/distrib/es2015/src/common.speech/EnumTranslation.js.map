{"version":3,"sources":["src/common.speech/EnumTranslation.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAElC,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAE9C,MAAM,OAAO,eAAe;IACjB,MAAM,CAAC,8BAA8B,CAAC,iBAAoC;QAC7E,IAAI,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC;QACnC,QAAQ,iBAAiB,EAAE;YACvB,KAAK,iBAAiB,CAAC,OAAO;gBAC1B,MAAM,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBACvC,MAAM;YACV,KAAK,iBAAiB,CAAC,OAAO,CAAC;YAC/B,KAAK,iBAAiB,CAAC,qBAAqB,CAAC;YAC7C,KAAK,iBAAiB,CAAC,aAAa,CAAC;YACrC,KAAK,iBAAiB,CAAC,cAAc;gBACjC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC;gBAC9B,MAAM;YACV,KAAK,iBAAiB,CAAC,KAAK,CAAC;YAC7B;gBACI,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC/B,MAAM;SACb;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,MAAM,CAAC,yBAAyB,CAAC,iBAAoC;QACxE,IAAI,MAAM,GAAG,kBAAkB,CAAC,WAAW,CAAC;QAC5C,QAAQ,iBAAiB,EAAE;YACvB,KAAK,iBAAiB,CAAC,OAAO,CAAC;YAC/B,KAAK,iBAAiB,CAAC,cAAc,CAAC;YACtC,KAAK,iBAAiB,CAAC,OAAO;gBAC1B,MAAM,GAAG,kBAAkB,CAAC,WAAW,CAAC;gBACxC,MAAM;YACV,KAAK,iBAAiB,CAAC,qBAAqB,CAAC;YAC7C,KAAK,iBAAiB,CAAC,aAAa,CAAC;YACrC,KAAK,iBAAiB,CAAC,KAAK,CAAC;YAC7B;gBACI,MAAM,GAAG,kBAAkB,CAAC,KAAK,CAAC;gBAClC,MAAM;SACb;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ","file":"EnumTranslation.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationReason, ResultReason } from \"../sdk/Exports\";\r\nimport { RecognitionStatus } from \"./Exports\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.EndOfDictation:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n}\r\n"]}